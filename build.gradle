// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    apply from: "config_repo.gradle"

    repositories rootProject.ext.MAVEN_REPOSITORIES

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin_version}"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:1.5.0'
        classpath 'com.github.kezong:fat-aar:1.3.6'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// 这个代码是否起作用存疑
configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply plugin: 'org.jetbrains.dokka'

allprojects {
    repositories rootProject.ext.MAVEN_REPOSITORIES
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
    apply plugin: 'project-report'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

import org.apache.tools.ant.taskdefs.condition.Os
task installGitHook(type: Copy) {
    def suffix = "macos"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        suffix = "windows"
    }

    from new File(rootProject.rootDir, "scripts/pre-commit-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-commit-$suffix", 'pre-commit')

    from new File(rootProject.rootDir, "scripts/pre-push-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-push-$suffix", 'pre-push')

    fileMode 0775
}

try {
    apply plugin:'git-hook'
} catch (ignored) {
    println("settings include failed. ignore:${ignored}")
}
